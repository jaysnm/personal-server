version: '3'
services:
# Proxy to forward https connections to services
  nginx:
    container_name: nginx
    image: nginx
    expose:
      - 80
      - 443
    ports:
      - 80:80
      - 443:443
    volumes:
      - conf:/etc/nginx/conf.d
    ##  - vhost:/etc/nginx/vhost.d
    ##  - html:/usr/share/nginx/html
    ##  - certs:/etc/nginx/certs:rw
    restart: always
  #Generate proxy settings for containers
  nginx-gen:
    container_name: nginx-gen
    image: jwilder/docker-gen
    depends_on:
      - nginx
    volumes:
      -  /var/run/docker.sock:/tmp/docker.sock:ro
      - ./volumes/proxy/templates:/etc/docker-gen/templates
    ##  - certs:/etc/nginx/certs:rw
      - conf:/etc/nginx/conf.d
    environment:
      - ENABLE_IPV6=true
    entrypoint: /usr/local/bin/docker-gen -notify-sighup nginx -watch -wait 5s:30s /etc/docker-gen/templates/nginx.tmpl /etc/nginx/conf.d/default.conf
    restart: always
  # Generate certs using letsencrypt
  #nginx-letsencrypt:
    #container_name: nginx-letsencrypt
    #image: jrcs/letsencrypt-nginx-proxy-companion
    #depends_on:
      #- nginx
      #- nginx-gen
    #volumes:
      #- /var/run/docker.sock:/var/run/docker.sock:ro
      #- vhost:/etc/nginx/vhost.d
      #- html:/usr/share/nginx/html
      #- certs:/etc/nginx/certs:rw
    #environment:
      #- NGINX_PROXY_CONTAINER=nginx
      #- NGINX_DOCKER_GEN_CONTAINER=nginx-gen
    #restart: always
# Rstudio server
  rstudio:
    container_name: rstudio
    image: rocker/tidyverse:latest
    expose:
      - 8787
    ports:
      - 8888:8787
    volumes:
      - ./public_projects:/home/rstudio/public_projects
      - ./private_projects:/home/rstudio/private_projects
      - ./scripts:/home/rstudio/scripts
      - r-packages:/usr/local/lib/R/site-library
    env_file:
      - ./secrets/rstudio/creds.env
    environment:
      - VIRTUAL_HOST=rstudio.seabbs.co.uk
      - VIRTUAL_PROTO=http
      - VIRTUAL_NETWORK=shinyproxy-net
      - VIRTUAL_PORT=8888
      - LETSENCRYPT_HOST=rstudio.seabbs.co.uk
      - LETSENCRYPT_EMAIL=contact@samabbott.co.uk
    restart: always
# Jenkins to handle automated builds
  jenkins:
    container_name: jenkins
    image: seabbs/jenkins-with-docker
    ports:
      - 9090:8080
      - 50000:50000
    volumes:
      - ./secrets/jenkins:/var/jenkins_home:rw
      - ../personal-server:/var/personal-server:rw
      - /var/run/docker.sock:/var/run/docker.sock
    environment:
      - NETWORK_ACCESS=internal
    restart: always
# Shinyproxy for managing shiny apps
  shinyproxy:
    container_name: shinyproxy
    image: seabbs/shinyproxy-in-docker
    expose:
      - 8080
    ports:
      - 8080:8080
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./volumes/shinyproxy:/opt/shinyproxy/app_yml:rw
    environment:
      - VIRTUAL_HOST=apps.seabbs.co.uk
      - VIRTUAL_PROTO=http
      - VIRTUAL_NETWORK=shinyproxy-net
      - VIRTUAL_PORT=8080
      - LETSENCRYPT_HOST=apps.seabbs.co.uk
      - LETSENCRYPT_EMAIL=contact@samabbott.co.uk
    restart: always
# Watchtower to watch docker images and update those running automatically
# This can either be done locally or from remote images
  watchtower:
    container_name: watchtower
    restart: always
    image: v2tec/watchtower
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ## Use below if pulling from private docker registries
    ##  - /home/<user>/.docker/config.json:/config.json
    environment:
      - NETWORK_ACCESS=internal
    # Look for new images every hour and removes old images
    # --no-pull will allow watchtower to get images from repos (will not work for built images)
    # Shinyproxy and shiny apps in containers/docker-compose.yml must be updated manually
    command: --schedule "0 * * * * *" --cleanup jenkins shinyproxy rstudio nginx-gen nginx nginx-letsencrypt

volumes:
  conf: #Volume for nginx config
  vhost: # For letsencrypt
  html: # For letsencrypt
  certs: #Volume for certificates
  r-packages: #Storage for R packages between containers

networks:
  default:
    external:
      name: shinyproxy-net
